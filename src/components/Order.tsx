// Importerar n칬dv칛ndiga moduler och hookar
import { Link, useLocation, useNavigate } from "react-router-dom";
import { useState, useEffect } from "react";
// Importerar API-funktionen f칬r att h칛mta kvittot
import { fetchReceipt } from "../api/api";
// Importerar stilfilen f칬r ordersidan
import "../styles/order.scss";
// Importerar bilder
import orderImage from "../assets/etaImage.png";
import logo from "../assets/Logo.png";

// 游꿢 Huvudkomponenten f칬r ordersidan
const Order = () => {
  // H칛mtar orderdata som skickades via state fr친n f칬reg친ende sida
  const location = useLocation();
  const navigate = useNavigate();
  const order = location.state?.order; // H칛mtar orderData fr친n state

  // State f칬r att lagra 친terst친ende tid tills ordern 칛r klar
  const [minutesLeft, setMinutesLeft] = useState<number | null>(null);
  // Dummy-funktion f칬r att uppdatera kvittot, 칛ven om det inte anv칛nds h칛r
  const setReceipt = useState<unknown>(null)[1];
  // H칛mtar API-nyckeln fr친n localStorage, om det inte finns n친gon s칛tts den till en tom str칛ng
  const apiKey = localStorage.getItem("apiKey") || "";

  // 游꿢 useEffect f칬r att r칛kna ner tiden tills ordern 칛r f칛rdig
  useEffect(() => {
    // Om ingen order finns, avbryt
    if (!order) return;

    // Funktion f칬r att ber칛kna 친terst친ende tid
    const calculateMinutesLeft = () => {
      const etaTime = new Date(order.eta).getTime(); // Konverterar orderns ETA till millisekunder
      const currentTime = Date.now(); // H칛mtar nuvarande tid i millisekunder
      const diffInMinutes = Math.max(
        Math.round((etaTime - currentTime) / 60000), // Ber칛knar skillnaden i minuter
        0 // S칛kerst칛ller att tiden aldrig blir negativ
      );
      setMinutesLeft(diffInMinutes); // Uppdaterar state med 친terst친ende tid
    };

    calculateMinutesLeft(); // K칬r funktionen direkt vid render
    const interval = setInterval(calculateMinutesLeft, 10000); // Uppdatera var 10:e sekund

    return () => clearInterval(interval); // Rensar intervallet vid unmount
  }, [order]); // useEffect k칬rs om order 칛ndras

  // 游꿢 Funktion f칬r att h칛mta kvittot och navigera till kvittosidan
  const handleGetReceipt = async () => {
    try {
      // Anropar API:et f칬r att h칛mta kvittot med order-ID och API-nyckeln
      const receiptData = await fetchReceipt(apiKey, order.id);
      setReceipt(receiptData); // Uppdaterar state med kvittot (ej anv칛nt i denna komponent)

      // Navigerar till kvittosidan och skickar med order-ID och kvittodata via state
      navigate("/receipt", {
        state: { orderId: order.id, receiptData: receiptData },
      });
    } catch (error) {
      console.error("Failed to fetch receipt", error); // Loggar eventuella fel
    }
  };

  // Om ingen order hittades, visa ett felmeddelande
  if (!order) {
    return <p>Ingen order hittades.</p>;
  }

  // 游꿢 Returnerar JSX-strukturen f칬r ordersidan
  return (
    <div className="order-page">
      {/* Klickbar logotyp som navigerar tillbaka till startsidan */}
      <Link to={"/"}>
        <img src={logo} alt="logo" className="order-logo" />
      </Link>

      {/* Bild p친 en ETA-indikator */}
      <img src={orderImage} alt="orderImage" className="order-image" />

      {/* Huvudrubrik som visar att best칛llningen tillagas */}
      <h3 className="order-header3">
        DINA WONTONS <br />
        TILLAGAS!
      </h3>

      {/* Visar ETA i minuter */}
      <p className="order-para1">
        <strong>ETA </strong> {minutesLeft} MIN
      </p>

      {/* Visar order-ID */}
      <p className="order-para2">
        <strong>#</strong>
        {order.id.toUpperCase()} {/* Konverterar till versaler */}
      </p>

      {/* Tv친 knappar: en f칬r att g칬ra en ny best칛llning och en f칬r att se kvittot */}
      <div className="order-buttons">
        <button className="order-button1" onClick={() => navigate("/")}>
          G칐R EN NY BEST츿LLNING
        </button>
        <button className="order-button2" onClick={handleGetReceipt}>
          SE KVITTO
        </button>
      </div>
    </div>
  );
};

// 游꿢 Exporterar Order-komponenten s친 att den kan anv칛ndas i appen
export default Order;
